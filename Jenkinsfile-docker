pipeline {
    agent any

    tools {
        jdk 'jdk17'  // Optional, if you need JDK for your setup
    }

    stages {
        stage('Clean Workspace') {
            steps {
                script {
                    echo "Cleaning workspace..."
                    deleteDir()  // Clears the workspace
                }
            }
        }

        stage('Git Checkout') {
            steps {
                script {
                    // Checkout the Git repository containing your project
                    git branch: 'main', 
                        credentialsId: 'github_secret', 
                        url: 'https://github.com/Immanuvel1207/dockertest.git'
                }
            }
        }

        stage('Docker Build & Push') {
            steps {
                script {
                    // Check if Dockerfile exists before proceeding
                    if (!fileExists('Dockerfile')) {
                        error "ERROR: Dockerfile is missing in the workspace!"
                    }

                    withDockerRegistry(credentialsId: 'docker', toolName: 'docker') {
                        def imageName = "immanuvel/devops"
                        def tag = "try"
                        
                        // Build the Docker image
                        sh "docker build -t ${imageName}:${tag} ."
                        
                        // Push the Docker image to Docker Hub
                        sh "docker push ${imageName}:${tag}"
                    }
                }
            }
        }

        stage('Deploy Docker Container') {
            steps {
                script {
                    // Stop and remove the existing container if it's running
                    sh "docker stop jusjes_container || true"
                    sh "docker rm jusjes_container || true"

                    // Run the new container
                    sh "docker run -d --name jusjes_container -p 3001:80 immanuvel/devops:try"
                }
            }
        }
    }
}
